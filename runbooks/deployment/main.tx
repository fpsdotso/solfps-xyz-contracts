################################################################
# Manage solfps-xyz-contracts deployment through Crypto Infrastructure as Code
################################################################

addon "svm" {
    rpc_api_url = input.rpc_api_url
    network_id = input.network_id
}

action "deploy_apply_damage" "svm::deploy_program" {
    description = "Deploy apply_damage program"
    program = svm::get_program_from_anchor_project("apply_damage") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_end_game" "svm::deploy_program" {
    description = "Deploy end_game program"
    program = svm::get_program_from_anchor_project("end_game") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_game" "svm::deploy_program" {
    description = "Deploy game program"
    program = svm::get_program_from_anchor_project("game") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_health" "svm::deploy_program" {
    description = "Deploy health program"
    program = svm::get_program_from_anchor_project("health") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_init_game" "svm::deploy_program" {
    description = "Deploy init_game program"
    program = svm::get_program_from_anchor_project("init_game") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_init_lobby" "svm::deploy_program" {
    description = "Deploy init_lobby program"
    program = svm::get_program_from_anchor_project("init_lobby") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_init_player" "svm::deploy_program" {
    description = "Deploy init_player program"
    program = svm::get_program_from_anchor_project("init_player") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_join_game" "svm::deploy_program" {
    description = "Deploy join_game program"
    program = svm::get_program_from_anchor_project("join_game") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_leave_game" "svm::deploy_program" {
    description = "Deploy leave_game program"
    program = svm::get_program_from_anchor_project("leave_game") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_movement" "svm::deploy_program" {
    description = "Deploy movement program"
    program = svm::get_program_from_anchor_project("movement") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_player" "svm::deploy_program" {
    description = "Deploy player program"
    program = svm::get_program_from_anchor_project("player") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_player_stats" "svm::deploy_program" {
    description = "Deploy player_stats program"
    program = svm::get_program_from_anchor_project("player_stats") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_position" "svm::deploy_program" {
    description = "Deploy position program"
    program = svm::get_program_from_anchor_project("position") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_respawn" "svm::deploy_program" {
    description = "Deploy respawn program"
    program = svm::get_program_from_anchor_project("respawn") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_solfps_xyz_contracts" "svm::deploy_program" {
    description = "Deploy solfps_xyz_contracts program"
    program = svm::get_program_from_anchor_project("solfps_xyz_contracts") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_start_game" "svm::deploy_program" {
    description = "Deploy start_game program"
    program = svm::get_program_from_anchor_project("start_game") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_switch_weapon" "svm::deploy_program" {
    description = "Deploy switch_weapon program"
    program = svm::get_program_from_anchor_project("switch_weapon") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_update_game" "svm::deploy_program" {
    description = "Deploy update_game program"
    program = svm::get_program_from_anchor_project("update_game") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}

action "deploy_weapon" "svm::deploy_program" {
    description = "Deploy weapon program"
    program = svm::get_program_from_anchor_project("weapon") 
    authority = signer.authority
    payer = signer.payer
    // Optional: if you want to deploy the program via a cheatcode when targeting a Surfnet, set `instant_surfnet_deployment = true`
    // Deploying via a cheatcode will write the program data directly to the program account, rather than sending transactions.
    // This will make deployments instantaneous, but is deviating from how the deployments will take place on devnet/mainnet.
    // instant_surfnet_deployment = true
}
